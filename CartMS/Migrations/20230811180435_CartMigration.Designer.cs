// <auto-generated />
using System;
using CartMS.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CartMS.Migrations
{
    [DbContext(typeof(CartDbContext))]
    [Migration("20230811180435_CartMigration")]
    partial class CartMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cart")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CartMS.Models.CartItemModel", b =>
                {
                    b.Property<int>("customer_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("seller_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<float>("freight_value")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<float>("unit_price")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("voucher")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("customer_id", "seller_id", "product_id");

                    b.ToTable("cart_items", "cart");
                });

            modelBuilder.Entity("CartMS.Models.CartModel", b =>
                {
                    b.Property<int>("customer_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<DateTime>("created_at")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("customer_id");

                    b.ToTable("carts", "cart");
                });

            modelBuilder.Entity("CartMS.Models.ProductModel", b =>
                {
                    b.Property<int>("seller_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<int>("product_id")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<bool>("active")
                        .IsRequired()
                        .HasColumnType("boolean");

                    b.Property<DateTime>("created_at")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("price")
                        .IsRequired()
                        .HasColumnType("real");

                    b.Property<DateTime>("updated_at")
                        .IsRequired()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("seller_id", "product_id");

                    b.ToTable("replica_products", "cart");
                });

#pragma warning restore 612, 618
        }
    }
}
