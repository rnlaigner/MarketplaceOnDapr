// <auto-generated />
using System;
using CartMS.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CartMS.Migrations
{
    [DbContext(typeof(CartDbContext))]
    partial class CartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CartMS.Models.CartItemModel", b =>
                {
                    b.Property<long>("customer_id")
                        .HasColumnType("bigint");

                    b.Property<long>("seller_id")
                        .HasColumnType("bigint");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("freight_value")
                        .HasColumnType("numeric");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("unit_price")
                        .HasColumnType("numeric");

                    b.Property<string>("vouchers")
                        .HasColumnType("text");

                    b.HasKey("customer_id", "seller_id", "product_id");

                    b.ToTable("cart_items");
                });

            modelBuilder.Entity("CartMS.Models.CartModel", b =>
                {
                    b.Property<long>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("customer_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("customer_id");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("CartMS.Models.ProductModel", b =>
                {
                    b.Property<long>("seller_id")
                        .HasColumnType("bigint");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.Property<bool>("active")
                        .HasColumnType("boolean");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<decimal>("freight_value")
                        .HasColumnType("numeric");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("seller_id", "product_id");

                    b.ToTable("replica_products");
                });

            modelBuilder.Entity("CartMS.Models.CartItemModel", b =>
                {
                    b.HasOne("CartMS.Models.CartModel", null)
                        .WithMany("packages")
                        .HasForeignKey("customer_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartMS.Models.CartModel", b =>
                {
                    b.Navigation("packages");
                });
#pragma warning restore 612, 618
        }
    }
}
