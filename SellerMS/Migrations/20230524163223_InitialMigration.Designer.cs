// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SellerMS.Infra;

#nullable disable

namespace SellerMS.Migrations
{
    [DbContext(typeof(SellerDbContext))]
    [Migration("20230524163223_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SellerMS.Models.OrderEntryDetails", b =>
                {
                    b.Property<long>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("order_id"));

                    b.Property<string>("card_brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("complement")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("customer_id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("installments")
                        .HasColumnType("integer");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("order_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("zip_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("order_id");

                    b.ToTable("order_entry_details");
                });

            modelBuilder.Entity("SellerMS.Models.OrderEntryViewModel", b =>
                {
                    b.Property<long>("order_id")
                        .HasColumnType("bigint");

                    b.Property<long>("seller_id")
                        .HasColumnType("bigint");

                    b.Property<int>("count_items")
                        .HasColumnType("integer");

                    b.Property<int>("count_vouchers")
                        .HasColumnType("integer");

                    b.Property<decimal>("total_amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_freight")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_incentive")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_invoice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_items")
                        .HasColumnType("numeric");

                    b.HasKey("order_id", "seller_id");

                    b.HasIndex("seller_id");

                    b.ToTable("order_entry_view", t =>
                        {
                            t.HasTrigger("LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL");
                        });

                    b.HasAnnotation("LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL", "CREATE FUNCTION \"LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL\"() RETURNS trigger as $LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL$\r\nBEGIN\r\n  REFRESH MATERIALIZED VIEW CONCURRENTLY OrderViewModel\r\nRETURN NEW;\r\nEND;\r\n$LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL$ LANGUAGE plpgsql;\r\nCREATE TRIGGER LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL AFTER INSERT\r\nON \"order_entry_view\"\r\nFOR EACH ROW EXECUTE PROCEDURE \"LC_TRIGGER_AFTER_INSERT_ORDERENTRYVIEWMODEL\"();");
                });

            modelBuilder.Entity("SellerMS.Models.OrderViewModel", b =>
                {
                    b.Property<decimal>("avg_order_revenue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("avg_order_value")
                        .HasColumnType("numeric");

                    b.Property<int>("count_orders")
                        .HasColumnType("integer");

                    b.Property<decimal>("revenue")
                        .HasColumnType("numeric");

                    b.Property<long>("seller_id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("total_overall")
                        .HasColumnType("numeric");

                    b.ToTable((string)null);

                    b.ToView("OrderViewModel", (string)null);
                });

            modelBuilder.Entity("SellerMS.Models.ProductEntryViewModel", b =>
                {
                    b.Property<long>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("product_id"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("order_count")
                        .HasColumnType("integer");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<int>("qty_available")
                        .HasColumnType("integer");

                    b.Property<int>("qty_reserved")
                        .HasColumnType("integer");

                    b.Property<long>("seller_id")
                        .HasColumnType("bigint");

                    b.Property<string>("sku")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("total_discount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_revenue")
                        .HasColumnType("numeric");

                    b.HasKey("product_id");

                    b.HasIndex("seller_id");

                    b.ToTable("product_entry_view");
                });

            modelBuilder.Entity("SellerMS.Models.ShipmentEntryViewModel", b =>
                {
                    b.Property<long>("seller_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("seller_id"));

                    b.Property<long>("package_id")
                        .HasColumnType("bigint");

                    b.HasKey("seller_id");

                    b.ToTable("shipment_entry_view");
                });

            modelBuilder.Entity("SellerMS.Models.ShipmentViewModel", b =>
                {
                    b.Property<long>("seller_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("seller_id"));

                    b.Property<long>("avg_mean_time_to_complete")
                        .HasColumnType("bigint");

                    b.Property<decimal>("avg_shipment_value_per_item")
                        .HasColumnType("numeric");

                    b.Property<decimal>("avg_shipment_value_per_order")
                        .HasColumnType("numeric");

                    b.Property<decimal>("total_number")
                        .HasColumnType("numeric");

                    b.HasKey("seller_id");

                    b.ToTable("shipment_view");
                });

            modelBuilder.Entity("SellerMS.Models.OrderEntryViewModel", b =>
                {
                    b.HasOne("SellerMS.Models.OrderEntryDetails", "details")
                        .WithMany()
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("details");
                });
#pragma warning restore 612, 618
        }
    }
}
