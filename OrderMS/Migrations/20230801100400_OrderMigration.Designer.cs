// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderMS.Infra;

#nullable disable

namespace OrderMS.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230801100400_OrderMigration")]
    partial class OrderMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("order")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("OrderHistoryNumbers");

            modelBuilder.HasSequence<int>("OrderNumbers");

            modelBuilder.Entity("OrderMS.Common.Models.CustomerOrderModel", b =>
                {
                    b.Property<int>("customer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("customer_id"));

                    b.Property<int>("next_order_id")
                        .HasColumnType("integer");

                    b.HasKey("customer_id");

                    b.ToTable("customer_orders", "order");
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderHistoryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"OrderHistoryNumbers\"')");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("order_id")
                        .HasColumnType("integer");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("order_id");

                    b.ToTable("order_history", "order");
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderItemModel", b =>
                {
                    b.Property<int>("order_id")
                        .HasColumnType("integer");

                    b.Property<int>("order_item_id")
                        .HasColumnType("integer");

                    b.Property<float>("freight_value")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<int>("seller_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("shipping_limit_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<float>("total_amount")
                        .HasColumnType("real");

                    b.Property<float>("total_items")
                        .HasColumnType("real");

                    b.Property<float>("unit_price")
                        .HasColumnType("real");

                    b.HasKey("order_id", "order_item_id");

                    b.ToTable("order_items", "order");
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("nextval('\"OrderNumbers\"')");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("id"));

                    b.Property<int>("count_items")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("customer_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("delivered_carrier_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("delivered_customer_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("estimated_delivery_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("invoice_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("purchase_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("total_amount")
                        .HasColumnType("real");

                    b.Property<float>("total_freight")
                        .HasColumnType("real");

                    b.Property<float>("total_incentive")
                        .HasColumnType("real");

                    b.Property<float>("total_invoice")
                        .HasColumnType("real");

                    b.Property<float>("total_items")
                        .HasColumnType("real");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("customer_id");

                    b.ToTable("orders", "order");
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderHistoryModel", b =>
                {
                    b.HasOne("OrderMS.Common.Models.OrderModel", null)
                        .WithMany("history")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderItemModel", b =>
                {
                    b.HasOne("OrderMS.Common.Models.OrderModel", null)
                        .WithMany("items")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrderMS.Common.Models.OrderModel", b =>
                {
                    b.Navigation("history");

                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
